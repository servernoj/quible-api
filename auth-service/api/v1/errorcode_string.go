// Code generated by "stringer -type=ErrorCode"; DO NOT EDIT.

package v1

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Err207_SomeDataUndeleted-2071011]
	_ = x[Err400_EmailNotRegistered-4001011]
	_ = x[Err400_InvalidEmailFormat-4001012]
	_ = x[Err400_InvalidUsernameFormat-4001013]
	_ = x[Err400_InvalidPhoneFormat-4001014]
	_ = x[Err400_UserWithUsernameExists-4001015]
	_ = x[Err400_InsufficientPasswordComplexity-4001016]
	_ = x[Err400_MalformedJSON-4001017]
	_ = x[Err400_InvalidRequestBody-4001018]
	_ = x[Err400_FileTooLarge-4001019]
	_ = x[Err400_InvalidClientId-4001020]
	_ = x[Err400_UserWithEmailOrUsernameExists-4001021]
	_ = x[Err400_InvalidOrMalformedToken-4001022]
	_ = x[Err400_ImageDataNotPresent-4001023]
	_ = x[Err400_UnsatisfactoryPassword-4001024]
	_ = x[Err400_UnsatisfactoryConfirmPassword-4001025]
	_ = x[Err400_UserWithEmailExists-4001026]
	_ = x[Err401_InvalidCredentials-4011011]
	_ = x[Err401_AuthorizationHeaderMissing-4011012]
	_ = x[Err401_AuthorizationHeaderInvalid-4011013]
	_ = x[Err401_AuthorizationExpired-4011014]
	_ = x[Err401_InvalidRefreshToken-4011015]
	_ = x[Err401_UserNotFound-4011016]
	_ = x[Err401_UserNotActivated-4011017]
	_ = x[Err401_InvalidAccessToken-4011018]
	_ = x[Err401_InvalidActivationToken-4011019]
	_ = x[Err401_InvalidPasswordResetToken-4011020]
	_ = x[Err403_CannotToDelete-4031011]
	_ = x[Err403_CannotEditPhone-4031012]
	_ = x[Err404_PlayerStatsNotFound-4041011]
	_ = x[Err404_UserOrPhoneNotFound-4041012]
	_ = x[Err404_AccountNotFound-4041013]
	_ = x[Err404_UserNotFound-4041014]
	_ = x[Err404_UserHasNoImage-4041015]
	_ = x[Err417_UnknownError-4171011]
	_ = x[Err417_InvalidToken-4171012]
	_ = x[Err417_UnableToAssociateUser-4171013]
	_ = x[Err422_UnknownError-4221011]
	_ = x[Err424_UnknownError-4241011]
	_ = x[Err424_UnableToSendEmail-4241012]
	_ = x[Err429_EditRequestTimedOut-4291011]
	_ = x[Err500_UnknownError-5001011]
	_ = x[Err500_UnableToDelete-5001012]
	_ = x[Err500_UnableToEditPhone-5001013]
	_ = x[Err500_UnableToRegister-5001014]
	_ = x[Err500_UnableToGenerateToken-5001015]
	_ = x[Err500_UnableToResetPassword-5001016]
	_ = x[Err500_UnableToActivateUser-5001017]
	_ = x[Err500_UnableToUpdateUser-5001018]
	_ = x[Err500_UnknownHumaError-5001019]
	_ = x[Err500_UnableToRetrieveProfileImage-5001020]
	_ = x[Err500_UnableToStoreImage-5001021]
	_ = x[Err503_DataBaseOnDelete-5031011]
	_ = x[Err503_DataBaseOnPhoneEdit-5031012]
}

const _ErrorCode_name = "Err207_SomeDataUndeletedErr400_EmailNotRegisteredErr400_InvalidEmailFormatErr400_InvalidUsernameFormatErr400_InvalidPhoneFormatErr400_UserWithUsernameExistsErr400_InsufficientPasswordComplexityErr400_MalformedJSONErr400_InvalidRequestBodyErr400_FileTooLargeErr400_InvalidClientIdErr400_UserWithEmailOrUsernameExistsErr400_InvalidOrMalformedTokenErr400_ImageDataNotPresentErr400_UnsatisfactoryPasswordErr400_UnsatisfactoryConfirmPasswordErr400_UserWithEmailExistsErr401_InvalidCredentialsErr401_AuthorizationHeaderMissingErr401_AuthorizationHeaderInvalidErr401_AuthorizationExpiredErr401_InvalidRefreshTokenErr401_UserNotFoundErr401_UserNotActivatedErr401_InvalidAccessTokenErr401_InvalidActivationTokenErr401_InvalidPasswordResetTokenErr403_CannotToDeleteErr403_CannotEditPhoneErr404_PlayerStatsNotFoundErr404_UserOrPhoneNotFoundErr404_AccountNotFoundErr404_UserNotFoundErr404_UserHasNoImageErr417_UnknownErrorErr417_InvalidTokenErr417_UnableToAssociateUserErr422_UnknownErrorErr424_UnknownErrorErr424_UnableToSendEmailErr429_EditRequestTimedOutErr500_UnknownErrorErr500_UnableToDeleteErr500_UnableToEditPhoneErr500_UnableToRegisterErr500_UnableToGenerateTokenErr500_UnableToResetPasswordErr500_UnableToActivateUserErr500_UnableToUpdateUserErr500_UnknownHumaErrorErr500_UnableToRetrieveProfileImageErr500_UnableToStoreImageErr503_DataBaseOnDeleteErr503_DataBaseOnPhoneEdit"

var _ErrorCode_map = map[ErrorCode]string{
	2071011: _ErrorCode_name[0:24],
	4001011: _ErrorCode_name[24:49],
	4001012: _ErrorCode_name[49:74],
	4001013: _ErrorCode_name[74:102],
	4001014: _ErrorCode_name[102:127],
	4001015: _ErrorCode_name[127:156],
	4001016: _ErrorCode_name[156:193],
	4001017: _ErrorCode_name[193:213],
	4001018: _ErrorCode_name[213:238],
	4001019: _ErrorCode_name[238:257],
	4001020: _ErrorCode_name[257:279],
	4001021: _ErrorCode_name[279:315],
	4001022: _ErrorCode_name[315:345],
	4001023: _ErrorCode_name[345:371],
	4001024: _ErrorCode_name[371:400],
	4001025: _ErrorCode_name[400:436],
	4001026: _ErrorCode_name[436:462],
	4011011: _ErrorCode_name[462:487],
	4011012: _ErrorCode_name[487:520],
	4011013: _ErrorCode_name[520:553],
	4011014: _ErrorCode_name[553:580],
	4011015: _ErrorCode_name[580:606],
	4011016: _ErrorCode_name[606:625],
	4011017: _ErrorCode_name[625:648],
	4011018: _ErrorCode_name[648:673],
	4011019: _ErrorCode_name[673:702],
	4011020: _ErrorCode_name[702:734],
	4031011: _ErrorCode_name[734:755],
	4031012: _ErrorCode_name[755:777],
	4041011: _ErrorCode_name[777:803],
	4041012: _ErrorCode_name[803:829],
	4041013: _ErrorCode_name[829:851],
	4041014: _ErrorCode_name[851:870],
	4041015: _ErrorCode_name[870:891],
	4171011: _ErrorCode_name[891:910],
	4171012: _ErrorCode_name[910:929],
	4171013: _ErrorCode_name[929:957],
	4221011: _ErrorCode_name[957:976],
	4241011: _ErrorCode_name[976:995],
	4241012: _ErrorCode_name[995:1019],
	4291011: _ErrorCode_name[1019:1045],
	5001011: _ErrorCode_name[1045:1064],
	5001012: _ErrorCode_name[1064:1085],
	5001013: _ErrorCode_name[1085:1109],
	5001014: _ErrorCode_name[1109:1132],
	5001015: _ErrorCode_name[1132:1160],
	5001016: _ErrorCode_name[1160:1188],
	5001017: _ErrorCode_name[1188:1215],
	5001018: _ErrorCode_name[1215:1240],
	5001019: _ErrorCode_name[1240:1263],
	5001020: _ErrorCode_name[1263:1298],
	5001021: _ErrorCode_name[1298:1323],
	5031011: _ErrorCode_name[1323:1346],
	5031012: _ErrorCode_name[1346:1372],
}

func (i ErrorCode) String() string {
	if str, ok := _ErrorCode_map[i]; ok {
		return str
	}
	return "ErrorCode(" + strconv.FormatInt(int64(i), 10) + ")"
}
